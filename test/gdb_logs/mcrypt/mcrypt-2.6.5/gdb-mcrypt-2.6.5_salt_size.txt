Temporary breakpoint 1 at 0x804a0f0: file mcrypt.c, line 186.
Starting program: /home/yangke/Program/Fabian-Yamaguchi/evdata/mcrypt/mcrypt-2.6.5/bin/bin/mcrypt -f key -d mcrypt_in_26.nc

Temporary breakpoint 1, main (argc=5, argv=0xbfffe894) at mcrypt.c:186
186	{
195	   Signal(SIGINT, shandler);
214	   if ((gaa(argc, argv, &info)) != -1) {
195	   Signal(SIGINT, shandler);
191	   int x, y, i, file_count = 0, keys = 0, used_algo = FALSE;
195	   Signal(SIGINT, shandler);
Signal (signo=2, func=0x804c290 <shandler>) at functions.c:35
35	{
40		act.sa_handler = func;
35	{
40		act.sa_handler = func;
41		sigemptyset(&act.sa_mask);
45			act.sa_flags |= SA_INTERRUPT;	/* SunOs 4.x */
53		if (sigaction(signo, &act, &oact) < 0)
55		return (oact.sa_handler);
64	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:196
196	   Signal(SIGQUIT, shandler);
Signal (signo=signo@entry=3, func=0x804c290 <shandler>) at functions.c:35
35	{
40		act.sa_handler = func;
35	{
40		act.sa_handler = func;
41		sigemptyset(&act.sa_mask);
45			act.sa_flags |= SA_INTERRUPT;	/* SunOs 4.x */
53		if (sigaction(signo, &act, &oact) < 0)
55		return (oact.sa_handler);
64	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:197
197	   Signal(SIGSEGV, shandler);
Signal (signo=signo@entry=11, func=0x804c290 <shandler>) at functions.c:35
35	{
40		act.sa_handler = func;
35	{
40		act.sa_handler = func;
41		sigemptyset(&act.sa_mask);
45			act.sa_flags |= SA_INTERRUPT;	/* SunOs 4.x */
53		if (sigaction(signo, &act, &oact) < 0)
55		return (oact.sa_handler);
64	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:198
198	   Signal(SIGPIPE, shandler);
Signal (signo=signo@entry=13, func=0x804c290 <shandler>) at functions.c:35
35	{
40		act.sa_handler = func;
35	{
40		act.sa_handler = func;
41		sigemptyset(&act.sa_mask);
45			act.sa_flags |= SA_INTERRUPT;	/* SunOs 4.x */
53		if (sigaction(signo, &act, &oact) < 0)
55		return (oact.sa_handler);
64	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:199
199	   Signal(SIGTERM, shandler);
Signal (signo=signo@entry=15, func=0x804c290 <shandler>) at functions.c:35
35	{
40		act.sa_handler = func;
35	{
40		act.sa_handler = func;
41		sigemptyset(&act.sa_mask);
45			act.sa_flags |= SA_INTERRUPT;	/* SunOs 4.x */
53		if (sigaction(signo, &act, &oact) < 0)
55		return (oact.sa_handler);
64	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:200
200	   Signal(SIGHUP, shandler);
Signal (signo=signo@entry=1, func=0x804c290 <shandler>) at functions.c:35
35	{
40		act.sa_handler = func;
35	{
40		act.sa_handler = func;
41		sigemptyset(&act.sa_mask);
45			act.sa_flags |= SA_INTERRUPT;	/* SunOs 4.x */
53		if (sigaction(signo, &act, &oact) < 0)
55		return (oact.sa_handler);
64	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:201
201	   Signal(SIGUSR1, SIG_IGN);
Signal (signo=signo@entry=10, func=func@entry=0x1) at functions.c:35
35	{
40		act.sa_handler = func;
35	{
40		act.sa_handler = func;
41		sigemptyset(&act.sa_mask);
45			act.sa_flags |= SA_INTERRUPT;	/* SunOs 4.x */
53		if (sigaction(signo, &act, &oact) < 0)
55		return (oact.sa_handler);
64	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:202
202	   Signal(SIGUSR2, SIG_IGN);
Signal (signo=signo@entry=12, func=func@entry=0x1) at functions.c:35
35	{
40		act.sa_handler = func;
35	{
40		act.sa_handler = func;
41		sigemptyset(&act.sa_mask);
45			act.sa_flags |= SA_INTERRUPT;	/* SunOs 4.x */
53		if (sigaction(signo, &act, &oact) < 0)
55		return (oact.sa_handler);
64	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:203
203	   Signal(SIGALRM, SIG_IGN);
Signal (signo=signo@entry=14, func=func@entry=0x1) at functions.c:35
35	{
40		act.sa_handler = func;
35	{
40		act.sa_handler = func;
41		sigemptyset(&act.sa_mask);
45			act.sa_flags |= SA_INTERRUPT;	/* SunOs 4.x */
53		if (sigaction(signo, &act, &oact) < 0)
55		return (oact.sa_handler);
64	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:207
207	   setlocale(LC_ALL, "");
208	   bindtextdomain(PACKAGE, LOCALEDIR);
209	   textdomain(PACKAGE);
212	   program_name = argv[0];
214	   if ((gaa(argc, argv, &info)) != -1) {
212	   program_name = argv[0];
214	   if ((gaa(argc, argv, &info)) != -1) {
gaa (argc=argc@entry=5, argv=argv@entry=0xbfffe894, 
    gaaval=gaaval@entry=0xbfffe760) at gaa.skel:419
419	gaa.skel: No such file or directory.
Run till exit from #0  gaa (argc=argc@entry=5, argv=argv@entry=0xbfffe894, 
    gaaval=gaaval@entry=0xbfffe760) at gaa.skel:419
0x0804a213 in main (argc=5, argv=0xbfffe894) at mcrypt.c:214
214	   if ((gaa(argc, argv, &info)) != -1) {
Value returned is $1 = -1
218	   if (info.config_file != NULL) {
225	      cfile = get_cfile(getuid(), ".mcryptrc");
__getuid () at ../sysdeps/unix/sysv/linux/i386/getuid.c:30
30	../sysdeps/unix/sysv/linux/i386/getuid.c: No such file or directory.
Run till exit from #0  __getuid ()
    at ../sysdeps/unix/sysv/linux/i386/getuid.c:30
0x0804b325 in main (argc=5, argv=0xbfffe894) at mcrypt.c:225
225	      cfile = get_cfile(getuid(), ".mcryptrc");
Value returned is $2 = 1000
233	   if (check_file(cfile) == 1) {
check_file (filename=filename@entry=0x8087140 "/home/yangke/.mcryptrc")
    at extra.c:145
145	{
148		fd = fopen( filename, "r");
149		if ( fd == NULL) return 0; /* does not exist  */
154	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:240
240	   _mcrypt_free(cfile);
_mcrypt_free (ptr=ptr@entry=0x8087140) at xmalloc.c:134
134		free(ptr);
0x080499b0 in free@plt ()
Single stepping until exit from function free@plt,
which has no line number information.
__GI___libc_free (mem=0x8087140) at malloc.c:2912
2912	malloc.c: No such file or directory.
Run till exit from #0  __GI___libc_free (mem=0x8087140) at malloc.c:2912
main (argc=5, argv=0xbfffe894) at mcrypt.c:243
243	   if (check_env() == TRUE) {
266	   if (gaa(argc, argv, &info) != -1) {
gaa (argc=argc@entry=5, argv=argv@entry=0xbfffe894, 
    gaaval=gaaval@entry=0xbfffe760) at gaa.skel:419
419	gaa.skel: No such file or directory.
Run till exit from #0  gaa (argc=argc@entry=5, argv=argv@entry=0xbfffe894, 
    gaaval=gaaval@entry=0xbfffe760) at gaa.skel:419
0x0804a2c3 in main (argc=5, argv=0xbfffe894) at mcrypt.c:266
266	   if (gaa(argc, argv, &info) != -1) {
Value returned is $3 = -1
271	   if (strstr(program_name, "decrypt") != NULL) {
277	      if (strlen(program_name) > 6) {
278		 Bzero(program_name, strlen(program_name));
279		 strcpy(program_name, "mcrypt");
278		 Bzero(program_name, strlen(program_name));
279		 strcpy(program_name, "mcrypt");
281	      din = FALSE;
279		 strcpy(program_name, "mcrypt");
282	      ein = TRUE;		/* It will change by the arguments */
290	   if ((info.size) * sizeof(char *) > 0) {
293	      file = NULL;
290	   if ((info.size) * sizeof(char *) > 0) {
291	      file = _mcrypt_malloc((info.size) * sizeof(char *));
_mcrypt_malloc (size=4) at xmalloc.c:29
29	{
32		if (size==0) return NULL;
34		x = malloc(size);
35		if (x != NULL) {
43	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:296
296	   if (info.ed_specified != 0) {
297	      din = info.din;
298	      ein = info.ein;
300	   if (info.real_random_flag == TRUE) {
304	   force = info.force;
322	   if (info.kmode != NULL) {
304	   force = info.force;
305	   bare_flag = info.bare_flag;
323	      keymode = info.kmode;
305	   bare_flag = info.bare_flag;
306	   unlink_flag = info.unlink_flag;
307	   quiet = info.quiet;
308	   noecho = info.noecho;
309	   noiv = info.noiv;
310	   double_check = info.double_check;
311	   flush = info.flush;
312	   nodelete = info.nodelete;
313	   timer = info.timer;
315	   algorithms_directory = info.algorithms_directory;
316	   modes_directory = info.modes_directory;
318	   gzipflag = info.gzipflag;
319	   bzipflag = info.bzipflag;
323	      keymode = info.kmode;
328	   if (info.hash != NULL) {
333	      hash = _mcrypt_strdup( HASH_ALGORITHM);
_mcrypt_strdup (str=0x80577ba "sha1") at xmalloc.c:142
142	char* _mcrypt_strdup( const char* str) {
145		ret = strdup( str);
146		if (ret==NULL) {
151	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:334
334	      hash_algorithm = check_hash_algo(hash);
333	      hash = _mcrypt_strdup( HASH_ALGORITHM);
334	      hash_algorithm = check_hash_algo(hash);
check_hash_algo (chain=0x80871b0 "sha1") at mcrypt.c:106
106	{
111	   for (i = 0; i < 255; i++) {
106	{
114		 strcpy(tmp, y);
106	{
112	      y = mhash_get_hash_name(i);
113	      if (y != NULL) {
112	      y = mhash_get_hash_name(i);
113	      if (y != NULL) {
114		 strcpy(tmp, y);
115		 free(y);
116		 mcrypt_tolow(tmp, strlen(tmp));
117		 if (strcmp(tmp, chain) == 0) {
111	   for (i = 0; i < 255; i++) {
112	      y = mhash_get_hash_name(i);
113	      if (y != NULL) {
112	      y = mhash_get_hash_name(i);
113	      if (y != NULL) {
114		 strcpy(tmp, y);
115		 free(y);
116		 mcrypt_tolow(tmp, strlen(tmp));
117		 if (strcmp(tmp, chain) == 0) {
111	   for (i = 0; i < 255; i++) {
112	      y = mhash_get_hash_name(i);
113	      if (y != NULL) {
112	      y = mhash_get_hash_name(i);
113	      if (y != NULL) {
114		 strcpy(tmp, y);
115		 free(y);
116		 mcrypt_tolow(tmp, strlen(tmp));
117		 if (strcmp(tmp, chain) == 0) {
123	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:337
337	   if (hash_algorithm < 0) {
334	      hash_algorithm = check_hash_algo(hash);
337	   if (hash_algorithm < 0) {
345	   if (info.keyfile != NULL) {
347	      keyfile = read_key_file(info.keyfile, &keys);
read_key_file (file=0xbfffeb37 "key", num=num@entry=0xbfffe758) at extra.c:483
483	{
489		FROMF = fopen(file, "r");
483	{
489		FROMF = fopen(file, "r");
490		if (FROMF == NULL) {
489		FROMF = fopen(file, "r");
490		if (FROMF == NULL) {
496		while (fgets(keyword, MAX_KEY_LEN, FROMF) != NULL) {
497			x++;
498			keys = _mcrypt_realloc(keys, x * sizeof(char *));
_mcrypt_realloc (ptr=ptr@entry=0x0, size=size@entry=4) at xmalloc.c:66
66	{
69		x = realloc(ptr, size);
70		if (x != NULL) {
79	}
read_key_file (file=0xbfffeb37 "key", num=num@entry=0xbfffe758) at extra.c:499
499			keys[x - 1] = _mcrypt_malloc(strlen(keyword) + 1);
498			keys = _mcrypt_realloc(keys, x * sizeof(char *));
499			keys[x - 1] = _mcrypt_malloc(strlen(keyword) + 1);
501			if (keyword[strlen(keyword) - 1] == '\n')
502				keyword[strlen(keyword) - 1] = '\0';
503			strcpy(keys[x - 1], keyword);
496		while (fgets(keyword, MAX_KEY_LEN, FROMF) != NULL) {
507		*num = x;
509		return keys;
511	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:346
346	      kin = 2;
347	      keyfile = read_key_file(info.keyfile, &keys);
346	      kin = 2;
351		 kin = 0;
346	      kin = 2;
351		 kin = 0;
365	   if (info.mode != NULL) {
366	      mode = info.mode;
371	   openpgp = info.openpgp;
372	   if (openpgp!=0) {
371	   openpgp = info.openpgp;
372	   if (openpgp!=0) {
378	   openpgp_z = info.openpgp_z;
379	   if ( openpgp_z < 0 || openpgp_z > 9 ) {
378	   openpgp_z = info.openpgp_z;
379	   if ( openpgp_z < 0 || openpgp_z > 9 ) {
383	   if (info.algorithm != NULL) {
406	      algorithm = DEFAULT_ALGORITHM;
409	   if ( mode != NULL) {
410	      y = mcrypt_module_is_block_algorithm_mode(mode, modes_directory);
411	      if (y < 0) {
419		check_keysize (keysize);
check_keysize (keysize=<optimized out>) at mcrypt.c:151
151		  mcrypt_module_get_algo_key_size(algorithm,
main (argc=5, argv=0xbfffe894) at mcrypt.c:417
417	   keysize = info.keysize;
419		check_keysize (keysize);
check_keysize (keysize=<optimized out>) at mcrypt.c:151
151		  mcrypt_module_get_algo_key_size(algorithm,
main (argc=5, argv=0xbfffe894) at mcrypt.c:418
418	   if ( keysize != 0) {
417	   keysize = info.keysize;
419		check_keysize (keysize);
check_keysize (keysize=<optimized out>) at mcrypt.c:151
151		  mcrypt_module_get_algo_key_size(algorithm,
main (argc=5, argv=0xbfffe894) at mcrypt.c:418
418	   if ( keysize != 0) {
422	   	keysize = mcrypt_module_get_algo_key_size(algorithm, algorithms_directory);
424	   if (info.keylen != 0 && check_env() == FALSE) {
429	   umask(066);
438	   mcrypt_init_random();
mcrypt_init_random () at random.c:39
39	{
40		fd0 = open(NAME_OF_DEV_URANDOM, O_RDONLY);
41		if (fd0 == -1) {
40		fd0 = open(NAME_OF_DEV_URANDOM, O_RDONLY);
41		if (fd0 == -1) {
46		fd1 = open(NAME_OF_DEV_RANDOM, O_RDONLY);
47		if (fd1 == -1) {
46		fd1 = open(NAME_OF_DEV_RANDOM, O_RDONLY);
47		if (fd1 == -1) {
52	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:448
448	   if (info.size == 1 && strcmp(info.input[0], "-") == 0)
419		check_keysize (keysize);
check_keysize (keysize=<optimized out>) at mcrypt.c:169
169		    if (siz[y] == keysize) {
main (argc=5, argv=0xbfffe894) at mcrypt.c:457
457	      file[i] = info.input[i];
456	   while (i < info.size) {
462	   if (stream_flag == TRUE)
466	   for (i = 0; i < file_count; i++) {
188	   short int ein = 0, din = 0, kin = 0, force = 0, return_val = 0;
466	   for (i = 0; i < file_count; i++) {
189	   char *einfile = 0, *dinfile = 0, *keyword = 0;
188	   short int ein = 0, din = 0, kin = 0, force = 0, return_val = 0;
189	   char *einfile = 0, *dinfile = 0, *keyword = 0;
475	      if (kin == 2 && i <= (keys - 1)) {
476		 keyword = keyfile[i];
477		 if (i != 0) {
476		 keyword = keyfile[i];
477		 if (i != 0) {
482	      if (stream_flag == FALSE) {
483		 if (is_normal_file(file[i]) == FALSE) {
is_normal_file (filename=0xbfffeb3e "mcrypt_in_26.nc") at extra.c:430
430	{
434		if (lstat(filename, &statBuf) != 0)
435			return FALSE;
434		if (lstat(filename, &statBuf) != 0)
441		if (S_ISREG(statBuf.st_mode) != 0) {
447	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:497
497	      if (din == TRUE) {	/* decryption */
499		 if (stream_flag != TRUE)
500		    dinfile = file[i];
501		 if ((isatty(fileno((FILE *) (stdin))) == 1)
502		     && (stream_flag == TRUE) && (force == 0)) {	/* not a tty */
515	         test_file_headers( dinfile);
test_file_headers (file=file@entry=0xbfffeb3e "mcrypt_in_26.nc") at extra.c:611
611	void test_file_headers( char* file) {
614		if (file==NULL) {
622			fd = fopen( file, "rb");
623			if (fd == NULL) {
622			fd = fopen( file, "rb");
623			if (fd == NULL) {
627			x = getc( fd);
628			fclose(fd);
627			x = getc( fd);
628			fclose(fd);
631		if (x==0) { /* mcrypt file format */
632			openpgp = 0;
643	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:534
534	      if (stream_flag != TRUE) {
537		 	outfile = remove_suffix( dinfile);
remove_suffix (filename=0xbfffeb3e "mcrypt_in_26.nc") at mcrypt.c:715
715	    y = strlen(filename);
718	    if ((filename[y - 1] == 'c'
main (argc=5, argv=0xbfffe894) at mcrypt.c:537
537		 	outfile = remove_suffix( dinfile);
remove_suffix (filename=0xbfffeb3e "mcrypt_in_26.nc") at mcrypt.c:719
719		 && filename[y - 2] == 'n' && filename[y - 3] == '.')) {
721	       outfile = _mcrypt_calloc(y - 2, 1);
722	       strncpy(outfile, filename, y - 3);
721	       outfile = _mcrypt_calloc(y - 2, 1);
_mcrypt_calloc (nmemb=nmemb@entry=13, size=size@entry=1) at xmalloc.c:47
47	{
50		if (size==0) return NULL;
52		x = calloc(nmemb, size);
53		if (x != NULL) {
62	}
remove_suffix (filename=0xbfffeb3e "mcrypt_in_26.nc") at mcrypt.c:729
729			strncpy(outfile, filename, y - 4);
742	       if (check_file(outfile) != 0) {
check_file (filename=filename@entry=0x8087140 "mcrypt_in_26") at extra.c:145
145	{
148		fd = fopen( filename, "r");
149		if ( fd == NULL) return 0; /* does not exist  */
154	}
main (argc=5, argv=0xbfffe894) at mcrypt.c:538
538		 	if (outfile==NULL)
537		 	outfile = remove_suffix( dinfile);
remove_suffix (filename=0xbfffeb3e "mcrypt_in_26.nc") at mcrypt.c:750
750		  cleanDelete = TRUE;
main (argc=5, argv=0xbfffe894) at mcrypt.c:537
537		 	outfile = remove_suffix( dinfile);
538		 	if (outfile==NULL)
587		 if (openpgp!=0) x = pgp_decrypt_wrap( dinfile, outfile, keyword);
588		 else x = decrypt_general(algorithm, dinfile, outfile, keyword);
decrypt_general (algorithm=0x80576fb "rijndael-128", 
    fromfile=fromfile@entry=0xbfffeb3e "mcrypt_in_26.nc", 
    tofile=tofile@entry=0x8087140 "mcrypt_in_26", 
    key=key@entry=0x8087338 "12345") at classic.c:435
435	{
453	   unsigned int len = 0;
435	{
462	   if (stream_flag == TRUE) {
495	      FROMF = fopen(fromfile, "rb");
496	      if (FROMF == NULL) {
495	      FROMF = fopen(fromfile, "rb");
496	      if (FROMF == NULL) {
501	      RTOF = fopen(tofile, "wb");
502	      if (RTOF == NULL) {
501	      RTOF = fopen(tofile, "wb");
502	      if (RTOF == NULL) {
510	   if (bare_flag == FALSE) {
512		  (FROMF, local_algorithm, local_mode, local_keymode,
check_file_head (fstream=fstream@entry=0x8087348, 
    algorithm=algorithm@entry=0xbfffe1e2 "\374\267\f\345\377\277\070\343\377\277&\314\376\267\374\342\377\277", mode=mode@entry=0xbfffe214 "", 
    keymode=keymode@entry=0xbfffe246 "\374\267|X\374\267\004", 
    keysize=0x8064de0 <keysize>, salt=salt@entry=0xbfffe278, 
    salt_size=salt_size@entry=0xbfffe1d4) at extra.c:172
172	{
183		fread(buf, 1, 3, fstream);
172	{
183		fread(buf, 1, 3, fstream);
172	{
183		fread(buf, 1, 3, fstream);
180			fstream = (FILE *) stdin;
183		fread(buf, 1, 3, fstream);
186		if (buf[0] == '\0' && buf[1] == 'm' && buf[2] == '\3') {
189			if (m_getbit(0, flags) != 0) {
194			if (m_getbit(1, flags) != 0) {
199			if (m_getbit(2, flags) != 0) {
204			if (m_getbit(3, flags) != 0) {
209			if (m_getbit(4, flags) != 0) {
214			if (m_getbit(5, flags) != 0) {
220			if (m_getbit(7, flags) != 0) {
226			read_until_null(tmp_buf, fstream);
read_until_null (pointer=pointer@entry=0xbfffe0d7 "\b\004", 
    fstream=fstream@entry=0x8087348) at extra.c:158
158	{
161		for (i = 0; i < 100; i++) {
158	{
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
167	}
check_file_head (fstream=fstream@entry=0x8087348, 
    algorithm=algorithm@entry=0xbfffe1e2 "\374\267\f\345\377\277\070\343\377\277&\314\376\267\374\342\377\277", mode=mode@entry=0xbfffe214 "", 
    keymode=keymode@entry=0xbfffe246 "\374\267|X\374\267\004", 
    keysize=0x8064de0 <keysize>, salt=salt@entry=0xbfffe278, 
    salt_size=salt_size@entry=0xbfffe1d4) at extra.c:227
227			strcpy(algorithm, tmp_buf);
229			fread(&keylen, sizeof(short int), 1, fstream);
233			*keysize = keylen;
236			read_until_null(tmp_buf, fstream);
read_until_null (pointer=pointer@entry=0xbfffe0d7 "\002\001", 
    fstream=fstream@entry=0x8087348) at extra.c:158
158	{
161		for (i = 0; i < 100; i++) {
158	{
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
167	}
check_file_head (fstream=fstream@entry=0x8087348, 
    algorithm=algorithm@entry=0xbfffe1e2 "\002\001", 
    mode=mode@entry=0xbfffe214 "", 
    keymode=keymode@entry=0xbfffe246 "\374\267|X\374\267\004", 
    keysize=0x8064de0 <keysize>, salt=salt@entry=0xbfffe278, 
    salt_size=salt_size@entry=0xbfffe1d4) at extra.c:237
237			strcpy(mode, tmp_buf);
239			read_until_null(tmp_buf, fstream);
read_until_null (
    pointer=pointer@entry=0xbfffe0d7 '\001' <repeats 61 times>, 'A' <repeats 39 times>, "\b", fstream=fstream@entry=0x8087348) at extra.c:158
158	{
161		for (i = 0; i < 100; i++) {
158	{
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
162			fread(&pointer[i], 1, 1, fstream);
163			if (pointer[i] == 0)
161		for (i = 0; i < 100; i++) {
167	}
check_file_head (fstream=fstream@entry=0x8087348, 
    algorithm=algorithm@entry=0xbfffe1e2 "\002\001", 
    mode=mode@entry=0xbfffe214 '\001' <repeats 61 times>, 'A' <repeats 39 times>, "\b", 
    keymode=keymode@entry=0xbfffe246 '\001' <repeats 11 times>, 'A' <repeats 39 times>, "\b", keysize=0x8064de0 <keysize>, salt=salt@entry=0xbfffe278, 
    salt_size=salt_size@entry=0xbfffe1d4) at extra.c:240
240			strcpy(keymode, tmp_buf);
241			fread(&sflag, 1, 1, fstream);
242			if (m_getbit(6, flags) == 1) { /* if the salt bit is set */
243				if (m_getbit(0, sflag) != 0) { /* if the first bit is set */
244					*salt_size = m_setbit(0, sflag, 0);
m_setbit (which=which@entry=0, fullnum=255, what=what@entry=0) at bits.c:32
32		if (what == 1) {
35			return i_unsetbit(which, fullnum);
37	}
check_file_head (fstream=fstream@entry=0x8087348, 
    algorithm=algorithm@entry=0xbfffe1e2 "\002\001", 
    mode=mode@entry=0xbfffe214 '\001' <repeats 50 times>, "AAAAAAAAAA", '\001' <repeats 28 times>, 'A' <repeats 62 times>, "\b", 
    keymode=keymode@entry=0xbfffe246 "AAAAAAAAAA", '\001' <repeats 28 times>, 'A' <repeats 62 times>, "\b", keysize=0x8064de0 <keysize>, 
    salt=salt@entry=0xbfffe278, salt_size=salt_size@entry=0xbfffe1d4)
    at extra.c:245
245					if (*salt_size > 0) {
244					*salt_size = m_setbit(0, sflag, 0);
245					if (*salt_size > 0) {
246						fread(tmp_buf, 1, *salt_size,

Program received signal SIGABRT, Aborted.
0xb7fdd424 in __kernel_vsyscall ()
