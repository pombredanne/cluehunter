Already logging to ./gdb.txt.
Breakpoint 1 at 0x8048740: file sndfile-info.c, line 63.
Starting program: /home/yangke/Program/Fabian-Yamaguchi/evdata/libsndfile/trace_verification/libsndfile-1.0.19/bin/bin/sndfile-info voc

Breakpoint 1, main (argc=2, argv=0xbfffe864) at sndfile-info.c:63
63	{	int	k ;
65		print_version () ;
print_version () at sndfile-info.c:112
112		sf_command (NULL, SFC_GET_LIB_VERSION, buffer, sizeof (buffer)) ;
main (argc=2, argv=0xbfffe864) at sndfile-info.c:63
63	{	int	k ;
65		print_version () ;
print_version () at sndfile-info.c:112
112		sf_command (NULL, SFC_GET_LIB_VERSION, buffer, sizeof (buffer)) ;
main (argc=2, argv=0xbfffe864) at sndfile-info.c:63
63	{	int	k ;
65		print_version () ;
print_version () at sndfile-info.c:112
112		sf_command (NULL, SFC_GET_LIB_VERSION, buffer, sizeof (buffer)) ;
sf_command (sndfile=0x0, command=command@entry=4096, data=data@entry=0xbfffe6ac, 
    datasize=datasize@entry=256) at sndfile.c:819
819	{	SF_PRIVATE *psf = (SF_PRIVATE *) sndfile ;
823		switch (command)
825				if (data == NULL)
833					snprintf (data, datasize, "%s-%s", PACKAGE_NAME, PACKAGE_VERSION) ;
834				return strlen (data) ;
1190	} /* sf_command */
print_version () at sndfile-info.c:113
113		printf ("\nVersion : %s\n\n", buffer) ;
main (argc=2, argv=0xbfffe864) at sndfile-info.c:67
67		if (argc < 2 || strcmp (argv [1], "--help") == 0 || strcmp (argv [1], "-h") == 0)
85		if (strcmp (argv [1], "-b") == 0)
94			info_dump (argv [k]) ;
info_dump (filename=<optimized out>) at sndfile-info.c:94
94			info_dump (argv [k]) ;
memset (__len=<optimized out>, __ch=<optimized out>, __dest=<optimized out>)
    at /usr/include/i386-linux-gnu/bits/string3.h:84
84	  return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
main (argc=2, argv=0xbfffe864) at sndfile-info.c:94
94			info_dump (argv [k]) ;
info_dump (filename=0xbfffeb13 "voc") at sndfile-info.c:94
94			info_dump (argv [k]) ;
memset (__len=28, __ch=0, __dest=0xbfffe690)
    at /usr/include/i386-linux-gnu/bits/string3.h:84
84	  return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
info_dump (filename=0xbfffeb13 "voc") at sndfile-info.c:235
235		if ((file = sf_open (filename, SFM_READ, &sfinfo)) == NULL)
sf_open (path=path@entry=0xbfffeb13 "voc", mode=mode@entry=16, 
    sfinfo=sfinfo@entry=0xbfffe690) at sndfile.c:305
305	{	SF_PRIVATE 	*psf ;
307		if ((psf = calloc (1, sizeof (SF_PRIVATE))) == NULL)
305	{	SF_PRIVATE 	*psf ;
307		if ((psf = calloc (1, sizeof (SF_PRIVATE))) == NULL)
312		memset (psf, 0, sizeof (SF_PRIVATE)) ;
317		copy_filename (psf, path) ;
copy_filename (path=<optimized out>, psf=<optimized out>) at sndfile.c:317
317		copy_filename (psf, path) ;
snprintf (__fmt=<optimized out>, __n=<optimized out>, __s=<optimized out>)
    at /usr/include/i386-linux-gnu/bits/stdio2.h:64
64	  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
sf_open (path=path@entry=0xbfffeb13 "voc", mode=mode@entry=16, 
    sfinfo=sfinfo@entry=0xbfffe690) at sndfile.c:312
312		memset (psf, 0, sizeof (SF_PRIVATE)) ;
313		psf_init_files (psf) ;
psf_init_files (psf=psf@entry=0x80dc008) at file_io.c:501
501	{	psf->filedes = -1 ;
502		psf->rsrcdes = -1 ;
503		psf->savedes = -1 ;
sf_open (path=path@entry=0xbfffeb13 "voc", mode=mode@entry=16, 
    sfinfo=sfinfo@entry=0xbfffe690) at sndfile.c:315
315		psf_log_printf (psf, "File : %s\n", path) ;
317		copy_filename (psf, path) ;
copy_filename (path=0xbfffeb13 "voc", psf=0x80dc008) at sndfile.c:317
317		copy_filename (psf, path) ;
snprintf (__fmt=0xb7fbd9ef "%s", __n=512, __s=0x80e0048 "")
    at /usr/include/i386-linux-gnu/bits/stdio2.h:64
64	  return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
__snprintf (s=s@entry=0x80e0048 "", maxlen=maxlen@entry=512, 
    format=format@entry=0xb7fbd9ef "%s") at snprintf.c:28
28	snprintf.c: No such file or directory.
32	in snprintf.c
33	in snprintf.c
28	in snprintf.c
33	in snprintf.c
37	in snprintf.c
copy_filename (path=0xbfffeb13 "voc", psf=0x80dc008) at sndfile.c:2379
2379		if ((ccptr = strrchr (path, '/')) || (ccptr = strrchr (path, '\\')))
2384		snprintf (psf->filename, sizeof (psf->filename), "%s", ccptr) ;
2387		snprintf (psf->directory, sizeof (psf->directory), "%s", path) ;
2388		if ((cptr = strrchr (psf->directory, '/')) || (cptr = strrchr (psf->directory, '\\')))
319		if (strcmp (path, "-") == 0)
320			psf->error = psf_set_stdio (psf, mode) ;
319		if (strcmp (path, "-") == 0)
322			psf->error = psf_fopen (psf, path, mode) ;
psf_fopen (psf=psf@entry=0x80dc008, pathname=pathname@entry=0xbfffeb13 "voc", 
    open_mode=open_mode@entry=16) at file_io.c:81
81	{
83		psf->filedes = psf_open_fd (pathname, open_mode) ;
82		psf->error = 0 ;
83		psf->filedes = psf_open_fd (pathname, open_mode) ;
85		if (psf->filedes == - SFE_BAD_OPEN_MODE)
83		psf->filedes = psf_open_fd (pathname, open_mode) ;
85		if (psf->filedes == - SFE_BAD_OPEN_MODE)
91		if (psf->filedes == -1)
94		psf->mode = open_mode ;
97	} /* psf_fopen */
sf_open (path=path@entry=0xbfffeb13 "voc", mode=mode@entry=16, 
    sfinfo=sfinfo@entry=0xbfffe690) at sndfile.c:324
324		return psf_open_file (psf, mode, sfinfo) ;
325	} /* sf_open */
324		return psf_open_file (psf, mode, sfinfo) ;
325	} /* sf_open */
324		return psf_open_file (psf, mode, sfinfo) ;
psf_open_file (psf=psf@entry=0x80dc008, mode=mode@entry=16, sfinfo=0xbfffe690)
    at sndfile.c:2451
2451	{	int		error, format ;
2456		if (psf->error)
2451	{	int		error, format ;
2456		if (psf->error)
2453		sf_errno = error = 0 ;
2454		sf_logbuffer [0] = 0 ;
2456		if (psf->error)
2461		if (mode != SFM_READ && mode != SFM_WRITE && mode != SFM_RDWR)
2466		if (sfinfo == NULL)
2472		sfinfo->frames = 0 ;
2476		if (mode == SFM_READ)
2472		sfinfo->frames = 0 ;
2473		sfinfo->sections = 0 ;
2474		sfinfo->seekable = 0 ;
2476		if (mode == SFM_READ)
2477		{	if ((SF_CONTAINER (sfinfo->format)) == SF_FORMAT_RAW)
2478			{	if (sf_format_check (sfinfo) == 0)
2477		{	if ((SF_CONTAINER (sfinfo->format)) == SF_FORMAT_RAW)
2484				memset (sfinfo, 0, sizeof (SF_INFO)) ;
2487		memcpy (&(psf->sf), sfinfo, sizeof (SF_INFO)) ;
2489		psf->Magick 		= SNDFILE_MAGICK ;
2490		psf->norm_float 	= SF_TRUE ;
2491		psf->norm_double	= SF_TRUE ;
2487		memcpy (&(psf->sf), sfinfo, sizeof (SF_INFO)) ;
2492		psf->mode 			= mode ;
2493		psf->dataoffset		= -1 ;
2494		psf->datalength		= -1 ;
2492		psf->mode 			= mode ;
2499		psf->seek			= psf_default_seek ;
2494		psf->datalength		= -1 ;
2495		psf->read_current	= -1 ;
2499		psf->seek			= psf_default_seek ;
2496		psf->write_current	= -1 ;
2497		psf->auto_header 	= SF_FALSE ;
2498		psf->rwf_endian		= SF_ENDIAN_LITTLE ;
2500		psf->float_int_mult = 0 ;
2501		psf->float_max		= -1.0 ;
2504		psf->unique_id		= psf_rand_int32 () ;
psf_rand_int32 () at common.c:1296
1296	{	static int32_t value = -1 ;
1299		if (value == -1)
1303			gettimeofday (&tv, NULL) ;
1304			value = tv.tv_sec + tv.tv_usec ;
1310		count = 4 + (value & 7) ;
1311		for (k = 0 ; k < count ; k++)
1310		count = 4 + (value & 7) ;
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1315	} /* psf_rand_int32 */
psf_open_file (psf=0x80dc008, psf@entry=0x60a8c1c0, mode=mode@entry=16, 
    sfinfo=<optimized out>) at sndfile.c:2506
2506		psf->sf.sections = 1 ;
2504		psf->unique_id		= psf_rand_int32 () ;
2508		psf->is_pipe = psf_is_pipe (psf) ;
psf_is_pipe (psf=psf@entry=0x80dc008) at file_io.c:446
446	{	struct stat statbuf ;
449			return SF_FALSE ;
446	{	struct stat statbuf ;
448		if (psf->virtual_io)
451		if (fstat (psf->filedes, &statbuf) == -1)
fstat (__statbuf=0xbfffe560, __fd=3) at /usr/include/i386-linux-gnu/sys/stat.h:469
469	  return __fxstat (_STAT_VER, __fd, __statbuf);
___fxstat64 (vers=vers@entry=3, fd=3, buf=buf@entry=0xbfffe560)
    at ../sysdeps/unix/sysv/linux/fxstat64.c:33
33	../sysdeps/unix/sysv/linux/fxstat64.c: No such file or directory.
35	in ../sysdeps/unix/sysv/linux/fxstat64.c
33	in ../sysdeps/unix/sysv/linux/fxstat64.c
__x86.get_pc_thunk.bx () at ../sysdeps/i386/i686/multiarch/strcat.S:55
55	../sysdeps/i386/i686/multiarch/strcat.S: No such file or directory.
___fxstat64 (vers=vers@entry=3, fd=3, buf=buf@entry=0xbfffe560)
    at ../sysdeps/unix/sysv/linux/fxstat64.c:35
35	../sysdeps/unix/sysv/linux/fxstat64.c: No such file or directory.
41	in ../sysdeps/unix/sysv/linux/fxstat64.c
psf_is_pipe (psf=psf@entry=0x80dc008) at file_io.c:451
451		if (fstat (psf->filedes, &statbuf) == -1)
457		if (S_ISFIFO (statbuf.st_mode) || S_ISSOCK (statbuf.st_mode))
461	} /* psf_is_pipe */
457		if (S_ISFIFO (statbuf.st_mode) || S_ISSOCK (statbuf.st_mode))
449			return SF_FALSE ;
461	} /* psf_is_pipe */
psf_open_file (psf=0x80dc008, psf@entry=0x60a8c1c0, mode=mode@entry=16, 
    sfinfo=<optimized out>) at sndfile.c:2510
2510		if (psf->is_pipe)
2508		psf->is_pipe = psf_is_pipe (psf) ;
2510		if (psf->is_pipe)
2515		{	psf->sf.seekable = SF_TRUE ;
2518			psf->filelength = psf_get_filelen (psf) ;
psf_get_filelen (psf=psf@entry=0x80dc008) at file_io.c:174
174	{	sf_count_t	filelen ;
176		if (psf->virtual_io)
179		filelen = psf_get_filelen_fd (psf->filedes) ;
psf_get_filelen_fd (fd=3) at file_io.c:179
179		filelen = psf_get_filelen_fd (psf->filedes) ;
fstat (__statbuf=0xbfffe550, __fd=3) at /usr/include/i386-linux-gnu/sys/stat.h:469
469	  return __fxstat (_STAT_VER, __fd, __statbuf);
___fxstat64 (vers=vers@entry=3, fd=3, buf=buf@entry=0xbfffe550)
    at ../sysdeps/unix/sysv/linux/fxstat64.c:33
33	../sysdeps/unix/sysv/linux/fxstat64.c: No such file or directory.
35	in ../sysdeps/unix/sysv/linux/fxstat64.c
33	in ../sysdeps/unix/sysv/linux/fxstat64.c
__x86.get_pc_thunk.bx () at ../sysdeps/i386/i686/multiarch/strcat.S:55
55	../sysdeps/i386/i686/multiarch/strcat.S: No such file or directory.
___fxstat64 (vers=vers@entry=3, fd=3, buf=buf@entry=0xbfffe550)
    at ../sysdeps/unix/sysv/linux/fxstat64.c:35
35	../sysdeps/unix/sysv/linux/fxstat64.c: No such file or directory.
41	in ../sysdeps/unix/sysv/linux/fxstat64.c
psf_get_filelen_fd (fd=<optimized out>) at file_io.c:474
474		if (fstat (fd, &statbuf) == -1)
477		return statbuf.st_size ;
psf_get_filelen (psf=psf@entry=0x80dc008) at file_io.c:181
181		if (filelen == -1)
179		filelen = psf_get_filelen_fd (psf->filedes) ;
psf_get_filelen_fd (fd=<optimized out>) at file_io.c:477
477		return statbuf.st_size ;
psf_get_filelen (psf=psf@entry=0x80dc008) at file_io.c:181
181		if (filelen == -1)
186		if (filelen == -SFE_BAD_STAT_SIZE)
191		switch (psf->mode)
197				if (psf->fileoffset > 0 && psf->filelength > 0)
215	} /* psf_get_filelen */
psf_open_file (psf=0x80dc008, psf@entry=0x60a8c1c0, mode=mode@entry=16, 
    sfinfo=<optimized out>) at sndfile.c:2521
2521		if (psf->fileoffset > 0)
2545		if (psf->filelength == SF_COUNT_MAX)
2548			psf_log_printf (psf, "Length : %D\n", psf->filelength) ;
2550		if (mode == SFM_WRITE || (mode == SFM_RDWR && psf->filelength == 0))
2568		else if ((SF_CONTAINER (psf->sf.format)) != SF_FORMAT_RAW)
2570			psf->sf.format = guess_file_type (psf) ;
guess_file_type (psf=0x80dc008) at sndfile.c:2218
2218		if (psf_binheader_readf (psf, "b", &buffer, SIGNED_SIZEOF (buffer)) != SIGNED_SIZEOF (buffer))
psf_binheader_readf (psf=psf@entry=0x80dc008, format=format@entry=0xb7fc482a "b")
    at common.c:908
908	{	va_list			argptr ;
922		va_start (argptr, format) ;
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
1076					psf_log_printf (psf, "*** Invalid format specifier `%c'\n", c) ;
919		if (! format)
924		while ((c = *format++))
925		{	switch (c)
1036						charptr = va_arg (argptr, char*) ;
1037						count = va_arg (argptr, int) ;
1038						if (count > 0)
1039							byte_count += header_read (psf, charptr, count) ;
header_read (psf=psf@entry=0x80dc008, ptr=0xbfffe600, bytes=12) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47c8, bytes=1, items=12, psf=psf@entry=0x80dc008)
    at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=psf@entry=0x80dc008, ptr=0xbfffe600, bytes=12) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
828		return bytes ;
826		psf->headindex += bytes ;
829	} /* header_read */
psf_binheader_readf (psf=psf@entry=0x80dc008, format=0xb7fc482b "", 
    format@entry=0xb7fc482a "b") at common.c:924
924		while ((c = *format++))
1084		return byte_count ;
1085	} /* psf_binheader_readf */
psf_open_file (psf=0x80dc008, psf@entry=0x60a8c1c0, mode=mode@entry=16, 
    sfinfo=<optimized out>) at sndfile.c:2570
2570			psf->sf.format = guess_file_type (psf) ;
guess_file_type (psf=0x80dc008) at sndfile.c:2223
2223		if ((buffer [0] == MAKE_MARKER ('R', 'I', 'F', 'F') || buffer [0] == MAKE_MARKER ('R', 'I', 'F', 'X'))
2227		if (buffer [0] == MAKE_MARKER ('F', 'O', 'R', 'M'))
2235		if (buffer [0] == MAKE_MARKER ('.', 's', 'n', 'd') || buffer [0] == MAKE_MARKER ('d', 'n', 's', '.'))
guess_file_type (psf=0x80dc008) at sndfile.c:2238
2238		if ((buffer [0] == MAKE_MARKER ('f', 'a', 'p', ' ') || buffer [0] == MAKE_MARKER (' ', 'p', 'a', 'f')))
guess_file_type (psf=0x80dc008) at sndfile.c:2241
2241		if (buffer [0] == MAKE_MARKER ('N', 'I', 'S', 'T'))
2244		if (buffer [0] == MAKE_MARKER ('C', 'r', 'e', 'a') && buffer [1] == MAKE_MARKER ('t', 'i', 'v', 'e'))
guess_file_type (psf=0x80dc008) at sndfile.c:2245
2245			return SF_FORMAT_VOC ;
psf_open_file (psf=0x80dc008, psf@entry=0x60a8c1c0, mode=mode@entry=16, 
    sfinfo=<optimized out>) at sndfile.c:2577
2577		psf->last_op = psf->mode ;
2570			psf->sf.format = guess_file_type (psf) ;
2577		psf->last_op = psf->mode ;
2609		switch (SF_CONTAINER (psf->sf.format))
2653					error = voc_open (psf) ;
voc_open (psf=psf@entry=0x80dc008) at voc.c:105
105	{	int subformat, error = 0 ;
107		if (psf->is_pipe)
108			return SFE_VOC_NO_PIPE ;
107		if (psf->is_pipe)
110		if (psf->mode == SFM_READ || (psf->mode == SFM_RDWR && psf->filelength > 0))
111		{	if ((error = voc_read_header (psf)))
voc_read_header (psf=0x80dc008) at voc.c:165
165		offset = psf_binheader_readf (psf, "pb", 0, creative, SIGNED_SIZEOF (creative)) ;
psf_binheader_readf (psf=psf@entry=0x80dc008, format=format@entry=0xb7fc1113 "pb")
    at common.c:908
908	{	va_list			argptr ;
922		va_start (argptr, format) ;
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
1076					psf_log_printf (psf, "*** Invalid format specifier `%c'\n", c) ;
919		if (! format)
924		while ((c = *format++))
925		{	switch (c)
1063						count = va_arg (argptr, int) ;
1064						header_seek (psf, count, SEEK_SET) ;
header_seek (whence=<optimized out>, position=<optimized out>, psf=<optimized out>)
    at common.c:837
837				if (position > SIGNED_SIZEOF (psf->header))
psf_binheader_readf (psf=psf@entry=0x80dc008, format=0xb7fc1114 "b", 
    format@entry=0xb7fc1113 "pb") at common.c:1063
1063						count = va_arg (argptr, int) ;
1064						header_seek (psf, count, SEEK_SET) ;
header_seek (whence=0, position=<optimized out>, psf=0x80dc008) at common.c:837
837				if (position > SIGNED_SIZEOF (psf->header))
header_seek (whence=0, position=<optimized out>, psf=0x80dc008) at common.c:842
842				if (position > psf->headend)
header_seek (whence=0, position=<optimized out>, psf=0x80dc008) at common.c:844
844				psf->headindex = position ;
psf_binheader_readf (psf=psf@entry=0x80dc008, format=0xb7fc1114 "b", 
    format@entry=0xb7fc1113 "pb") at common.c:924
924		while ((c = *format++))
925		{	switch (c)
1036						charptr = va_arg (argptr, char*) ;
1037						count = va_arg (argptr, int) ;
1038						if (count > 0)
1039							byte_count += header_read (psf, charptr, count) ;
header_read (psf=psf@entry=0x80dc008, ptr=0xbfffe598, bytes=20) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47d4, bytes=1, items=8, psf=psf@entry=0x80dc008)
    at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=psf@entry=0x80dc008, ptr=0xbfffe598, bytes=20) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
828		return bytes ;
826		psf->headindex += bytes ;
829	} /* header_read */
psf_binheader_readf (psf=psf@entry=0x80dc008, format=0xb7fc1115 "", 
    format@entry=0xb7fc1113 "pb") at common.c:924
924		while ((c = *format++))
1084		return byte_count ;
1085	} /* psf_binheader_readf */
voc_read_header (psf=0x80dc008) at voc.c:167
167		if (creative [sizeof (creative) - 1] != 0x1A)
voc_open (psf=psf@entry=0x80dc008) at voc.c:111
111		{	if ((error = voc_read_header (psf)))
voc_read_header (psf=0x80dc008) at voc.c:173
173		if (strcmp ("Creative Voice File", creative))
171		creative [sizeof (creative) - 1] = 0 ;
173		if (strcmp ("Creative Voice File", creative))
176		psf_log_printf (psf, "%s\n", creative) ;
178		offset += psf_binheader_readf (psf, "e222", &dataoffset, &version, &checksum) ;
psf_binheader_readf (psf=psf@entry=0x80dc008, 
    format=format@entry=0xb7fc22f4 "e222") at common.c:908
908	{	va_list			argptr ;
922		va_start (argptr, format) ;
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
1076					psf_log_printf (psf, "*** Invalid format specifier `%c'\n", c) ;
919		if (! format)
924		while ((c = *format++))
925		{	switch (c)
927						psf->rwf_endian = SF_ENDIAN_LITTLE ;
928						break ;
924		while ((c = *format++))
925		{	switch (c)
960						shortptr = va_arg (argptr, unsigned short*) ;
961						*shortptr = 0 ;
963						byte_count += header_read (psf, ucptr, sizeof (short)) ;
header_read (psf=psf@entry=0x80dc008, ptr=ptr@entry=0xbfffe58e, 
    bytes=bytes@entry=2) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47dc, bytes=1, items=2, psf=psf@entry=0x80dc008)
    at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=psf@entry=0x80dc008, ptr=ptr@entry=0xbfffe58e, 
    bytes=bytes@entry=2) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
828		return bytes ;
826		psf->headindex += bytes ;
829	} /* header_read */
psf_binheader_readf (psf=psf@entry=0x80dc008, format=0xb7fc22f6 "22", 
    format@entry=0xb7fc22f4 "e222") at common.c:960
960						shortptr = va_arg (argptr, unsigned short*) ;
963						byte_count += header_read (psf, ucptr, sizeof (short)) ;
964						if (psf->rwf_endian == SF_ENDIAN_BIG)
924		while ((c = *format++))
925		{	switch (c)
960						shortptr = va_arg (argptr, unsigned short*) ;
961						*shortptr = 0 ;
963						byte_count += header_read (psf, ucptr, sizeof (short)) ;
header_read (psf=psf@entry=0x80dc008, ptr=ptr@entry=0xbfffe588, 
    bytes=bytes@entry=2) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47de, bytes=1, items=2, psf=psf@entry=0x80dc008)
    at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=psf@entry=0x80dc008, ptr=ptr@entry=0xbfffe588, 
    bytes=bytes@entry=2) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
828		return bytes ;
826		psf->headindex += bytes ;
829	} /* header_read */
psf_binheader_readf (psf=psf@entry=0x80dc008, format=0xb7fc22f7 "2", 
    format@entry=0xb7fc22f4 "e222") at common.c:960
960						shortptr = va_arg (argptr, unsigned short*) ;
963						byte_count += header_read (psf, ucptr, sizeof (short)) ;
964						if (psf->rwf_endian == SF_ENDIAN_BIG)
924		while ((c = *format++))
925		{	switch (c)
960						shortptr = va_arg (argptr, unsigned short*) ;
961						*shortptr = 0 ;
963						byte_count += header_read (psf, ucptr, sizeof (short)) ;
header_read (psf=psf@entry=0x80dc008, ptr=ptr@entry=0xbfffe58a, 
    bytes=bytes@entry=2) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47e0, bytes=1, items=2, psf=psf@entry=0x80dc008)
    at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=psf@entry=0x80dc008, ptr=ptr@entry=0xbfffe58a, 
    bytes=bytes@entry=2) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
828		return bytes ;
826		psf->headindex += bytes ;
829	} /* header_read */
psf_binheader_readf (psf=psf@entry=0x80dc008, format=0xb7fc22f8 "", 
    format@entry=0xb7fc22f4 "e222") at common.c:960
960						shortptr = va_arg (argptr, unsigned short*) ;
963						byte_count += header_read (psf, ucptr, sizeof (short)) ;
964						if (psf->rwf_endian == SF_ENDIAN_BIG)
924		while ((c = *format++))
1084		return byte_count ;
1085	} /* psf_binheader_readf */
voc_read_header (psf=0x80dc008) at voc.c:180
180		psf->dataoffset = dataoffset ;
178		offset += psf_binheader_readf (psf, "e222", &dataoffset, &version, &checksum) ;
182		psf_log_printf (psf, 	"dataoffset : %d\n"
180		psf->dataoffset = dataoffset ;
182		psf_log_printf (psf, 	"dataoffset : %d\n"
186		if (version != 0x010A && version != 0x0114)
189		if (! (psf->codec_data = malloc (sizeof (VOC_DATA))))
190			return SFE_MALLOC_FAILED ;
189		if (! (psf->codec_data = malloc (sizeof (VOC_DATA))))
178		offset += psf_binheader_readf (psf, "e222", &dataoffset, &version, &checksum) ;
194		memset (pvoc, 0, sizeof (VOC_DATA)) ;
178		offset += psf_binheader_readf (psf, "e222", &dataoffset, &version, &checksum) ;
194		memset (pvoc, 0, sizeof (VOC_DATA)) ;
220						offset += psf_binheader_readf (psf, "e32", &size, &count) ;
178		offset += psf_binheader_readf (psf, "e222", &dataoffset, &version, &checksum) ;
197		psf->sf.format = SF_FORMAT_VOC ; /* Major format */
198		encoding = SF_FORMAT_PCM_U8 ; /* Minor format */
199		psf->endian = SF_ENDIAN_LITTLE ;
220						offset += psf_binheader_readf (psf, "e32", &size, &count) ;
206			offset += psf_binheader_readf (psf, "1", &block_type) ;
205			block_type = 0 ;
206			offset += psf_binheader_readf (psf, "1", &block_type) ;
psf_binheader_readf (psf=psf@entry=0x80dc008, format=format@entry=0xb7fc12e1 "1")
    at common.c:908
908	{	va_list			argptr ;
922		va_start (argptr, format) ;
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
1076					psf_log_printf (psf, "*** Invalid format specifier `%c'\n", c) ;
919		if (! format)
924		while ((c = *format++))
925		{	switch (c)
954						charptr = va_arg (argptr, char*) ;
956						byte_count += header_read (psf, charptr, sizeof (char)) ;
954						charptr = va_arg (argptr, char*) ;
955						*charptr = 0 ;
956						byte_count += header_read (psf, charptr, sizeof (char)) ;
header_read (psf=psf@entry=0x80dc008, ptr=0xbfffe583, bytes=bytes@entry=1)
    at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47e2, bytes=1, items=1, psf=psf@entry=0x80dc008)
    at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=psf@entry=0x80dc008, ptr=0xbfffe583, bytes=bytes@entry=1)
    at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
828		return bytes ;
826		psf->headindex += bytes ;
829	} /* header_read */
psf_binheader_readf (psf=psf@entry=0x80dc008, format=0xb7fc12e2 "", 
    format@entry=0xb7fc12e1 "1") at common.c:954
954						charptr = va_arg (argptr, char*) ;
956						byte_count += header_read (psf, charptr, sizeof (char)) ;
957						break ;
924		while ((c = *format++))
1084		return byte_count ;
1085	} /* psf_binheader_readf */
voc_read_header (psf=0x80dc008) at voc.c:208
208			switch (block_type)
210						offset += psf_binheader_readf (psf, "e3", &size) ;
psf_binheader_readf (psf=psf@entry=0x80dc008, format=format@entry=0xb7fc234a "e3")
    at common.c:908
908	{	va_list			argptr ;
922		va_start (argptr, format) ;
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
1076					psf_log_printf (psf, "*** Invalid format specifier `%c'\n", c) ;
919		if (! format)
924		while ((c = *format++))
925		{	switch (c)
927						psf->rwf_endian = SF_ENDIAN_LITTLE ;
928						break ;
924		while ((c = *format++))
925		{	switch (c)
971						intptr = va_arg (argptr, unsigned int*) ;
973						byte_count += header_read (psf, sixteen_bytes, 3) ;
972						*intptr = 0 ;
973						byte_count += header_read (psf, sixteen_bytes, 3) ;
header_read (psf=psf@entry=0x80dc008, ptr=ptr@entry=0xbfffe50c, 
    bytes=bytes@entry=3) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47e3, bytes=1, items=3, psf=psf@entry=0x80dc008)
    at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=psf@entry=0x80dc008, ptr=ptr@entry=0xbfffe50c, 
    bytes=bytes@entry=3) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
828		return bytes ;
826		psf->headindex += bytes ;
829	} /* header_read */
psf_binheader_readf (psf=psf@entry=0x80dc008, format=0xb7fc234c "", 
    format@entry=0xb7fc234a "e3") at common.c:974
974						if (psf->rwf_endian == SF_ENDIAN_BIG)
977							*intptr = GET_LE_3BYTE (sixteen_bytes) ;
971						intptr = va_arg (argptr, unsigned int*) ;
977							*intptr = GET_LE_3BYTE (sixteen_bytes) ;
924		while ((c = *format++))
1084		return byte_count ;
1085	} /* psf_binheader_readf */
voc_read_header (psf=0x80dc008) at voc.c:212
212						psf_log_printf (psf, " ASCII : %d\n", size) ;
210						offset += psf_binheader_readf (psf, "e3", &size) ;
212						psf_log_printf (psf, " ASCII : %d\n", size) ;
214						offset += psf_binheader_readf (psf, "b", psf->header, size) ;
212						psf_log_printf (psf, " ASCII : %d\n", size) ;
214						offset += psf_binheader_readf (psf, "b", psf->header, size) ;
psf_binheader_readf (psf=psf@entry=0x80dc008, format=format@entry=0xb7fc482a "b")
    at common.c:908
908	{	va_list			argptr ;
922		va_start (argptr, format) ;
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
1076					psf_log_printf (psf, "*** Invalid format specifier `%c'\n", c) ;
919		if (! format)
924		while ((c = *format++))
925		{	switch (c)
1036						charptr = va_arg (argptr, char*) ;
1037						count = va_arg (argptr, int) ;
1038						if (count > 0)
1039							byte_count += header_read (psf, charptr, count) ;
header_read (psf=psf@entry=0x80dc008, ptr=0x80e47c8, bytes=1048575) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
808			most = SIGNED_SIZEOF (psf->header) - psf->headindex ;
809			psf_fread (psf->header + psf->headend, 1, most, psf) ;
psf_fread (ptr=0x80e47e6, bytes=1, items=12262, psf=psf@entry=0x80dc008)
    at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=psf@entry=0x80dc008, ptr=0x80e47c8, bytes=1048575) at common.c:810
810			memset ((char *) ptr + most, 0, bytes - most) ;

Program received signal SIGSEGV, Segmentation fault.
__memset_sse2_rep () at ../sysdeps/i386/i686/multiarch/memset-sse2-rep.S:325
325	../sysdeps/i386/i686/multiarch/memset-sse2-rep.S: No such file or directory.
