Temporary breakpoint 1 at 0x8048856: file sndfile-info.c, line 65.
Starting program: /home/yangke/Program/Fabian-Yamaguchi/evdata/libsndfile/CVE-2009-1788/libsndfile-1.0.19/bin/bin/sndfile-info CVE-2009-1788.voc >out

Temporary breakpoint 1, main (argc=2, argv=0xbfffe854) at sndfile-info.c:65
65		print_version () ;
67		if (argc < 2 || strcmp (argv [1], "--help") == 0 || strcmp (argv [1], "-h") == 0)
77		if (strcmp (argv [1], "-i") == 0)
85		if (strcmp (argv [1], "-b") == 0)
93		for (k = 1 ; k < argc ; k++)
94			info_dump (argv [k]) ;
info_dump (filename=0xbfffeb08 "CVE-2009-1788.voc") at sndfile-info.c:233
233		memset (&sfinfo, 0, sizeof (sfinfo)) ;
235		if ((file = sf_open (filename, SFM_READ, &sfinfo)) == NULL)
sf_open (path=0xbfffeb08 "CVE-2009-1788.voc", mode=16, sfinfo=0xbfffe764)
    at sndfile.c:307
307		if ((psf = calloc (1, sizeof (SF_PRIVATE))) == NULL)
312		memset (psf, 0, sizeof (SF_PRIVATE)) ;
313		psf_init_files (psf) ;
psf_init_files (psf=0x80dc008) at file_io.c:501
501	{	psf->filedes = -1 ;
502		psf->rsrcdes = -1 ;
503		psf->savedes = -1 ;
504	} /* psf_init_files */
sf_open (path=0xbfffeb08 "CVE-2009-1788.voc", mode=16, sfinfo=0xbfffe764)
    at sndfile.c:315
315		psf_log_printf (psf, "File : %s\n", path) ;
317		copy_filename (psf, path) ;
copy_filename (psf=0x80dc008, path=0xbfffeb08 "CVE-2009-1788.voc")
    at sndfile.c:2378
2378		snprintf (psf->filepath, sizeof (psf->filepath), "%s", path) ;
2379		if ((ccptr = strrchr (path, '/')) || (ccptr = strrchr (path, '\\')))
2382			ccptr = path ;
2384		snprintf (psf->filename, sizeof (psf->filename), "%s", ccptr) ;
2387		snprintf (psf->directory, sizeof (psf->directory), "%s", path) ;
2388		if ((cptr = strrchr (psf->directory, '/')) || (cptr = strrchr (psf->directory, '\\')))
2391			psf->directory [0] = 0 ;
2393		return ;
2394	} /* copy_filename */
sf_open (path=0xbfffeb08 "CVE-2009-1788.voc", mode=16, sfinfo=0xbfffe764)
    at sndfile.c:319
319		if (strcmp (path, "-") == 0)
322			psf->error = psf_fopen (psf, path, mode) ;
psf_fopen (psf=0x80dc008, pathname=0xbfffeb08 "CVE-2009-1788.voc", 
    open_mode=16) at file_io.c:82
82		psf->error = 0 ;
83		psf->filedes = psf_open_fd (pathname, open_mode) ;
psf_open_fd (pathname=0xbfffeb08 "CVE-2009-1788.voc", open_mode=16)
    at file_io.c:536
536		switch (open_mode)
538					oflag = O_RDONLY | O_BINARY ;
539					mode = 0 ;
540					break ;
557		if (mode == 0)
558			fd = open (pathname, oflag) ;
562		return fd ;
563	} /* psf_open_fd */
psf_fopen (psf=0x80dc008, pathname=0xbfffeb08 "CVE-2009-1788.voc", 
    open_mode=16) at file_io.c:85
85		if (psf->filedes == - SFE_BAD_OPEN_MODE)
91		if (psf->filedes == -1)
94		psf->mode = open_mode ;
96		return psf->error ;
97	} /* psf_fopen */
sf_open (path=0xbfffeb08 "CVE-2009-1788.voc", mode=16, sfinfo=0xbfffe764)
    at sndfile.c:324
324		return psf_open_file (psf, mode, sfinfo) ;
psf_open_file (psf=0x80dc008, mode=16, sfinfo=0xbfffe764) at sndfile.c:2453
2453		sf_errno = error = 0 ;
2454		sf_logbuffer [0] = 0 ;
2456		if (psf->error)
2461		if (mode != SFM_READ && mode != SFM_WRITE && mode != SFM_RDWR)
2466		if (sfinfo == NULL)
2472		sfinfo->frames = 0 ;
2473		sfinfo->sections = 0 ;
2474		sfinfo->seekable = 0 ;
2476		if (mode == SFM_READ)
2477		{	if ((SF_CONTAINER (sfinfo->format)) == SF_FORMAT_RAW)
2484				memset (sfinfo, 0, sizeof (SF_INFO)) ;
2487		memcpy (&(psf->sf), sfinfo, sizeof (SF_INFO)) ;
2489		psf->Magick 		= SNDFILE_MAGICK ;
2490		psf->norm_float 	= SF_TRUE ;
2491		psf->norm_double	= SF_TRUE ;
2492		psf->mode 			= mode ;
2493		psf->dataoffset		= -1 ;
2494		psf->datalength		= -1 ;
2495		psf->read_current	= -1 ;
2496		psf->write_current	= -1 ;
2497		psf->auto_header 	= SF_FALSE ;
2498		psf->rwf_endian		= SF_ENDIAN_LITTLE ;
2499		psf->seek			= psf_default_seek ;
2500		psf->float_int_mult = 0 ;
2501		psf->float_max		= -1.0 ;
2504		psf->unique_id		= psf_rand_int32 () ;
psf_rand_int32 () at common.c:1299
1299		if (value == -1)
1303			gettimeofday (&tv, NULL) ;
1304			value = tv.tv_sec + tv.tv_usec ;
1310		count = 4 + (value & 7) ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1312			value = 11117 * value + 211231 ;
1311		for (k = 0 ; k < count ; k++)
1314		return value ;
1315	} /* psf_rand_int32 */
psf_open_file (psf=0x80dc008, mode=16, sfinfo=0xbfffe764) at sndfile.c:2506
2506		psf->sf.sections = 1 ;
2508		psf->is_pipe = psf_is_pipe (psf) ;
psf_is_pipe (psf=0x80dc008) at file_io.c:448
448		if (psf->virtual_io)
451		if (fstat (psf->filedes, &statbuf) == -1)
457		if (S_ISFIFO (statbuf.st_mode) || S_ISSOCK (statbuf.st_mode))
460		return SF_FALSE ;
461	} /* psf_is_pipe */
psf_open_file (psf=0x80dc008, mode=16, sfinfo=0xbfffe764) at sndfile.c:2510
2510		if (psf->is_pipe)
2515		{	psf->sf.seekable = SF_TRUE ;
2518			psf->filelength = psf_get_filelen (psf) ;
psf_get_filelen (psf=0x80dc008) at file_io.c:176
176		if (psf->virtual_io)
179		filelen = psf_get_filelen_fd (psf->filedes) ;
psf_get_filelen_fd (fd=3) at file_io.c:474
474		if (fstat (fd, &statbuf) == -1)
477		return statbuf.st_size ;
478	} /* psf_get_filelen_fd */
psf_get_filelen (psf=0x80dc008) at file_io.c:181
181		if (filelen == -1)
186		if (filelen == -SFE_BAD_STAT_SIZE)
191		switch (psf->mode)
197				if (psf->fileoffset > 0 && psf->filelength > 0)
199				break ;
214		return filelen ;
215	} /* psf_get_filelen */
psf_open_file (psf=0x80dc008, mode=16, sfinfo=0xbfffe764) at sndfile.c:2521
2521		if (psf->fileoffset > 0)
2545		if (psf->filelength == SF_COUNT_MAX)
2548			psf_log_printf (psf, "Length : %D\n", psf->filelength) ;
2550		if (mode == SFM_WRITE || (mode == SFM_RDWR && psf->filelength == 0))
2568		else if ((SF_CONTAINER (psf->sf.format)) != SF_FORMAT_RAW)
2570			psf->sf.format = guess_file_type (psf) ;
guess_file_type (psf=0x80dc008) at sndfile.c:2218
2218		if (psf_binheader_readf (psf, "b", &buffer, SIGNED_SIZEOF (buffer)) != SIGNED_SIZEOF (buffer))
psf_binheader_readf (psf=0x80dc008, format=0xb7fbfad9 "b") at common.c:908
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
922		va_start (argptr, format) ;
924		while ((c = *format++))
925		{	switch (c)
1036						charptr = va_arg (argptr, char*) ;
1037						count = va_arg (argptr, int) ;
1038						if (count > 0)
1039							byte_count += header_read (psf, charptr, count) ;
header_read (psf=0x80dc008, ptr=0xbfffe674, bytes=12) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47c8, bytes=1, items=12, psf=0x80dc008) at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
321		while (items > 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=0x80dc008, ptr=0xbfffe674, bytes=12) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
826		psf->headindex += bytes ;
828		return bytes ;
829	} /* header_read */
psf_binheader_readf (psf=0x80dc008, format=0xb7fbfada "") at common.c:1040
1040						break ;
924		while ((c = *format++))
1084		return byte_count ;
1085	} /* psf_binheader_readf */
guess_file_type (psf=0x80dc008) at sndfile.c:2223
2223		if ((buffer [0] == MAKE_MARKER ('R', 'I', 'F', 'F') || buffer [0] == MAKE_MARKER ('R', 'I', 'F', 'X'))
2227		if (buffer [0] == MAKE_MARKER ('F', 'O', 'R', 'M'))
2235		if (buffer [0] == MAKE_MARKER ('.', 's', 'n', 'd') || buffer [0] == MAKE_MARKER ('d', 'n', 's', '.'))
2238		if ((buffer [0] == MAKE_MARKER ('f', 'a', 'p', ' ') || buffer [0] == MAKE_MARKER (' ', 'p', 'a', 'f')))
2241		if (buffer [0] == MAKE_MARKER ('N', 'I', 'S', 'T'))
2244		if (buffer [0] == MAKE_MARKER ('C', 'r', 'e', 'a') && buffer [1] == MAKE_MARKER ('t', 'i', 'v', 'e'))
2245			return SF_FORMAT_VOC ;
2329	} /* guess_file_type */
psf_open_file (psf=0x80dc008, mode=16, sfinfo=0xbfffe764) at sndfile.c:2572
2572			if (psf->sf.format == 0)
2577		psf->last_op = psf->mode ;
2580		switch (SF_CODEC (psf->sf.format))
2609		switch (SF_CONTAINER (psf->sf.format))
2653					error = voc_open (psf) ;
voc_open (psf=0x80dc008) at voc.c:105
105	{	int subformat, error = 0 ;
107		if (psf->is_pipe)
110		if (psf->mode == SFM_READ || (psf->mode == SFM_RDWR && psf->filelength > 0))
111		{	if ((error = voc_read_header (psf)))
voc_read_header (psf=0x80dc008) at voc.c:158
158	{	VOC_DATA	*pvoc ;
165		offset = psf_binheader_readf (psf, "pb", 0, creative, SIGNED_SIZEOF (creative)) ;
psf_binheader_readf (psf=0x80dc008, format=0xb7fc29e8 "pb") at common.c:908
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
922		va_start (argptr, format) ;
924		while ((c = *format++))
925		{	switch (c)
1063						count = va_arg (argptr, int) ;
1064						header_seek (psf, count, SEEK_SET) ;
header_seek (psf=0x80dc008, position=0, whence=0) at common.c:835
835		switch (whence)
837				if (position > SIGNED_SIZEOF (psf->header))
842				if (position > psf->headend)
844				psf->headindex = position ;
845				break ;
878		return ;
879	} /* header_seek */
psf_binheader_readf (psf=0x80dc008, format=0xb7fc29e9 "b") at common.c:1065
1065						byte_count = count ;
1066						break ;
924		while ((c = *format++))
925		{	switch (c)
1036						charptr = va_arg (argptr, char*) ;
1037						count = va_arg (argptr, int) ;
1038						if (count > 0)
1039							byte_count += header_read (psf, charptr, count) ;
header_read (psf=0x80dc008, ptr=0xbfffe638, bytes=20) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47d4, bytes=1, items=8, psf=0x80dc008) at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
321		while (items > 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=0x80dc008, ptr=0xbfffe638, bytes=20) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
826		psf->headindex += bytes ;
828		return bytes ;
829	} /* header_read */
psf_binheader_readf (psf=0x80dc008, format=0xb7fc29ea "") at common.c:1040
1040						break ;
924		while ((c = *format++))
1084		return byte_count ;
1085	} /* psf_binheader_readf */
voc_read_header (psf=0x80dc008) at voc.c:167
167		if (creative [sizeof (creative) - 1] != 0x1A)
171		creative [sizeof (creative) - 1] = 0 ;
173		if (strcmp ("Creative Voice File", creative))
176		psf_log_printf (psf, "%s\n", creative) ;
178		offset += psf_binheader_readf (psf, "e222", &dataoffset, &version, &checksum) ;
psf_binheader_readf (psf=0x80dc008, format=0xb7fc2a03 "e222") at common.c:908
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
922		va_start (argptr, format) ;
924		while ((c = *format++))
925		{	switch (c)
927						psf->rwf_endian = SF_ENDIAN_LITTLE ;
928						break ;
924		while ((c = *format++))
925		{	switch (c)
960						shortptr = va_arg (argptr, unsigned short*) ;
961						*shortptr = 0 ;
962						ucptr = (unsigned char*) shortptr ;
963						byte_count += header_read (psf, ucptr, sizeof (short)) ;
header_read (psf=0x80dc008, ptr=0xbfffe622, bytes=2) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47dc, bytes=1, items=2, psf=0x80dc008) at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
321		while (items > 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=0x80dc008, ptr=0xbfffe622, bytes=2) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
826		psf->headindex += bytes ;
828		return bytes ;
829	} /* header_read */
psf_binheader_readf (psf=0x80dc008, format=0xb7fc2a05 "22") at common.c:964
964						if (psf->rwf_endian == SF_ENDIAN_BIG)
967							*shortptr = GET_LE_SHORT (ucptr) ;
968						break ;
924		while ((c = *format++))
925		{	switch (c)
960						shortptr = va_arg (argptr, unsigned short*) ;
961						*shortptr = 0 ;
962						ucptr = (unsigned char*) shortptr ;
963						byte_count += header_read (psf, ucptr, sizeof (short)) ;
header_read (psf=0x80dc008, ptr=0xbfffe61c, bytes=2) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47de, bytes=1, items=2, psf=0x80dc008) at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
321		while (items > 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=0x80dc008, ptr=0xbfffe61c, bytes=2) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
826		psf->headindex += bytes ;
828		return bytes ;
829	} /* header_read */
psf_binheader_readf (psf=0x80dc008, format=0xb7fc2a06 "2") at common.c:964
964						if (psf->rwf_endian == SF_ENDIAN_BIG)
967							*shortptr = GET_LE_SHORT (ucptr) ;
968						break ;
924		while ((c = *format++))
925		{	switch (c)
960						shortptr = va_arg (argptr, unsigned short*) ;
961						*shortptr = 0 ;
962						ucptr = (unsigned char*) shortptr ;
963						byte_count += header_read (psf, ucptr, sizeof (short)) ;
header_read (psf=0x80dc008, ptr=0xbfffe61e, bytes=2) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47e0, bytes=1, items=2, psf=0x80dc008) at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
321		while (items > 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=0x80dc008, ptr=0xbfffe61e, bytes=2) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
826		psf->headindex += bytes ;
828		return bytes ;
829	} /* header_read */
psf_binheader_readf (psf=0x80dc008, format=0xb7fc2a07 "") at common.c:964
964						if (psf->rwf_endian == SF_ENDIAN_BIG)
967							*shortptr = GET_LE_SHORT (ucptr) ;
968						break ;
924		while ((c = *format++))
1084		return byte_count ;
1085	} /* psf_binheader_readf */
voc_read_header (psf=0x80dc008) at voc.c:180
180		psf->dataoffset = dataoffset ;
182		psf_log_printf (psf, 	"dataoffset : %d\n"
186		if (version != 0x010A && version != 0x0114)
189		if (! (psf->codec_data = malloc (sizeof (VOC_DATA))))
192		pvoc = (VOC_DATA*) psf->codec_data ;
194		memset (pvoc, 0, sizeof (VOC_DATA)) ;
197		psf->sf.format = SF_FORMAT_VOC ; /* Major format */
198		encoding = SF_FORMAT_PCM_U8 ; /* Minor format */
199		psf->endian = SF_ENDIAN_LITTLE ;
205			block_type = 0 ;
206			offset += psf_binheader_readf (psf, "1", &block_type) ;
psf_binheader_readf (psf=0x80dc008, format=0xb7fc2a3d "1") at common.c:908
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
922		va_start (argptr, format) ;
924		while ((c = *format++))
925		{	switch (c)
954						charptr = va_arg (argptr, char*) ;
955						*charptr = 0 ;
956						byte_count += header_read (psf, charptr, sizeof (char)) ;
header_read (psf=0x80dc008, ptr=0xbfffe617, bytes=1) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47e2, bytes=1, items=1, psf=0x80dc008) at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
321		while (items > 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=0x80dc008, ptr=0xbfffe617, bytes=1) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
826		psf->headindex += bytes ;
828		return bytes ;
829	} /* header_read */
psf_binheader_readf (psf=0x80dc008, format=0xb7fc2a3e "") at common.c:957
957						break ;
924		while ((c = *format++))
1084		return byte_count ;
1085	} /* psf_binheader_readf */
voc_read_header (psf=0x80dc008) at voc.c:208
208			switch (block_type)
210						offset += psf_binheader_readf (psf, "e3", &size) ;
psf_binheader_readf (psf=0x80dc008, format=0xb7fc2a3f "e3") at common.c:908
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
922		va_start (argptr, format) ;
924		while ((c = *format++))
925		{	switch (c)
927						psf->rwf_endian = SF_ENDIAN_LITTLE ;
928						break ;
924		while ((c = *format++))
925		{	switch (c)
971						intptr = va_arg (argptr, unsigned int*) ;
972						*intptr = 0 ;
973						byte_count += header_read (psf, sixteen_bytes, 3) ;
header_read (psf=0x80dc008, ptr=0xbfffe5ac, bytes=3) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
816		if (psf->headindex + bytes > psf->headend)
817		{	count = psf_fread (psf->header + psf->headend, 1, bytes - (psf->headend - psf->headindex), psf) ;
psf_fread (ptr=0x80e47e3, bytes=1, items=3, psf=0x80dc008) at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
321		while (items > 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=0x80dc008, ptr=0xbfffe5ac, bytes=3) at common.c:818
818			if (count != bytes - (int) (psf->headend - psf->headindex))
822			psf->headend += count ;
825		memcpy (ptr, psf->header + psf->headindex, bytes) ;
826		psf->headindex += bytes ;
828		return bytes ;
829	} /* header_read */
psf_binheader_readf (psf=0x80dc008, format=0xb7fc2a41 "") at common.c:974
974						if (psf->rwf_endian == SF_ENDIAN_BIG)
977							*intptr = GET_LE_3BYTE (sixteen_bytes) ;
978						break ;
924		while ((c = *format++))
1084		return byte_count ;
1085	} /* psf_binheader_readf */
voc_read_header (psf=0x80dc008) at voc.c:212
212						psf_log_printf (psf, " ASCII : %d\n", size) ;
214						offset += psf_binheader_readf (psf, "b", psf->header, size) ;
psf_binheader_readf (psf=0x80dc008, format=0xb7fc2a4f "b") at common.c:908
908	{	va_list			argptr ;
917		int				byte_count = 0, count ;
919		if (! format)
922		va_start (argptr, format) ;
924		while ((c = *format++))
925		{	switch (c)
1036						charptr = va_arg (argptr, char*) ;
1037						count = va_arg (argptr, int) ;
1038						if (count > 0)
1039							byte_count += header_read (psf, charptr, count) ;
header_read (psf=0x80dc008, ptr=0x80e47c8, bytes=11627616) at common.c:795
795	{	int count = 0 ;
797		if (psf->headindex >= SIGNED_SIZEOF (psf->header))
805		if (psf->headindex + bytes > SIGNED_SIZEOF (psf->header))
808			most = SIGNED_SIZEOF (psf->header) - psf->headindex ;
809			psf_fread (psf->header + psf->headend, 1, most, psf) ;
psf_fread (ptr=0x80e47e6, bytes=1, items=12262, psf=0x80dc008)
    at file_io.c:309
309	{	sf_count_t total = 0 ;
312		if (psf->virtual_io)
315		items *= bytes ;
318		if (items <= 0)
321		while (items > 0)
323			count = (items > SENSIBLE_SIZE) ? SENSIBLE_SIZE : (ssize_t) items ;
325			count = read (psf->filedes, ((char*) ptr) + total, (size_t) count) ;
327			if (count == -1)
335			if (count == 0)
338			total += count ;
339			items -= count ;
321		while (items > 0)
342		if (psf->is_pipe)
345		return total / bytes ;
346	} /* psf_fread */
header_read (psf=0x80dc008, ptr=0x80e47c8, bytes=11627616) at common.c:810
810			memset ((char *) ptr + most, 0, bytes - most) ;

Program received signal SIGSEGV, Segmentation fault.
__memset_sse2_rep () at ../sysdeps/i386/i686/multiarch/memset-sse2-rep.S:325
325	../sysdeps/i386/i686/multiarch/memset-sse2-rep.S: No such file or directory.
