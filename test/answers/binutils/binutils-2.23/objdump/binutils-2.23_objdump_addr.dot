digraph tiantgraph{
"451#922	  for (counter = 0, set = ardata->symdefs;";
"484#927	      set->file_offset = H_GET_32 (abfd, rbase + BSD_SYMDEF_OFFSET_SIZE);";
"485#bfd_getl32 (p=0x81cf000) at libbfd.c:619"[shape="record"];
"486#619	  const bfd_byte *addr = (const bfd_byte *) p;";
"487#622	  v = (unsigned long) addr[0];";
"424#913	  rbase = raw_armap + BSD_SYMDEF_COUNT_SIZE;";
"380#889	  raw_armap = (bfd_byte *) bfd_zalloc (abfd, parsed_size);";
"428#917	  amt = ardata->symdef_count * sizeof (carsym);";
"429#918	  ardata->symdefs = (struct carsym *) bfd_alloc (abfd, amt);";
"355#886	  parsed_size = mapdata->parsed_size;";
"190#bfd_slurp_armap (abfd=0x81aea08) at archive.c:1074"[shape="record"];
"251#1088	    return do_slurp_bsd_armap (abfd);";
"473#922	  for (counter = 0, set = ardata->symdefs;counter<ardata->symdef_count;counter++,set++,rbase+=BSD_SYMDEF_SIZE)";
"411#902	  ardata->symdef_count = H_GET_32 (abfd, raw_armap) / BSD_SYMDEF_SIZE;";
"252#do_slurp_bsd_armap (abfd=0x81aea08) at archive.c:878"[shape="record"];
"189#809	  if (!BFD_SEND (abfd, _bfd_slurp_armap, (abfd))";
"254#883	  mapdata = (struct areltdata *) _bfd_read_ar_hdr (abfd);";
edge [fontname = "Verdana", fontsize = 10, color="crimson", style="solid"];
"451#922	  for (counter = 0, set = ardata->symdefs;"->"429#918	  ardata->symdefs = (struct carsym *) bfd_alloc (abfd, amt);"[label="ardata->symdefs|ardata"];
"484#927	      set->file_offset = H_GET_32 (abfd, rbase + BSD_SYMDEF_OFFSET_SIZE);"->"473#922	  for (counter = 0, set = ardata->symdefs;counter<ardata->symdef_count;counter++,set++,rbase+=BSD_SYMDEF_SIZE)"[label="rbase"];
"486#619	  const bfd_byte *addr = (const bfd_byte *) p;"->"485#bfd_getl32 (p=0x81cf000) at libbfd.c:619"[label="p"];
"487#622	  v = (unsigned long) addr[0];"->"486#619	  const bfd_byte *addr = (const bfd_byte *) p;"[label="*(addr)|*addr|addr"];
"424#913	  rbase = raw_armap + BSD_SYMDEF_COUNT_SIZE;"->"380#889	  raw_armap = (bfd_byte *) bfd_zalloc (abfd, parsed_size);"[label="raw_armap"];
"428#917	  amt = ardata->symdef_count * sizeof (carsym);"->"411#902	  ardata->symdef_count = H_GET_32 (abfd, raw_armap) / BSD_SYMDEF_SIZE;"[label="ardata->symdef_count|ardata"];
"429#918	  ardata->symdefs = (struct carsym *) bfd_alloc (abfd, amt);"->"428#917	  amt = ardata->symdef_count * sizeof (carsym);"[label="amt"];
"429#918	  ardata->symdefs = (struct carsym *) bfd_alloc (abfd, amt);"->"252#do_slurp_bsd_armap (abfd=0x81aea08) at archive.c:878"[label="abfd"];
"355#886	  parsed_size = mapdata->parsed_size;"->"254#883	  mapdata = (struct areltdata *) _bfd_read_ar_hdr (abfd);"[label="mapdata->parsed_size|mapdata"];
"251#1088	    return do_slurp_bsd_armap (abfd);"->"190#bfd_slurp_armap (abfd=0x81aea08) at archive.c:1074"[label="abfd"];
"473#922	  for (counter = 0, set = ardata->symdefs;counter<ardata->symdef_count;counter++,set++,rbase+=BSD_SYMDEF_SIZE)"->"411#902	  ardata->symdef_count = H_GET_32 (abfd, raw_armap) / BSD_SYMDEF_SIZE;"[label="ardata->symdef_count|ardata"];
"473#922	  for (counter = 0, set = ardata->symdefs;counter<ardata->symdef_count;counter++,set++,rbase+=BSD_SYMDEF_SIZE)"->"451#922	  for (counter = 0, set = ardata->symdefs;"[label="counter"];
"473#922	  for (counter = 0, set = ardata->symdefs;counter<ardata->symdef_count;counter++,set++,rbase+=BSD_SYMDEF_SIZE)"->"424#913	  rbase = raw_armap + BSD_SYMDEF_COUNT_SIZE;"[label="rbase"];
"411#902	  ardata->symdef_count = H_GET_32 (abfd, raw_armap) / BSD_SYMDEF_SIZE;"->"252#do_slurp_bsd_armap (abfd=0x81aea08) at archive.c:878"[label="abfd"];
"411#902	  ardata->symdef_count = H_GET_32 (abfd, raw_armap) / BSD_SYMDEF_SIZE;"->"380#889	  raw_armap = (bfd_byte *) bfd_zalloc (abfd, parsed_size);"[label="raw_armap"];
"380#889	  raw_armap = (bfd_byte *) bfd_zalloc (abfd, parsed_size);"->"252#do_slurp_bsd_armap (abfd=0x81aea08) at archive.c:878"[label="abfd"];
"380#889	  raw_armap = (bfd_byte *) bfd_zalloc (abfd, parsed_size);"->"355#886	  parsed_size = mapdata->parsed_size;"[label="parsed_size"];
"254#883	  mapdata = (struct areltdata *) _bfd_read_ar_hdr (abfd);"->"252#do_slurp_bsd_armap (abfd=0x81aea08) at archive.c:878"[label="abfd"];
"252#do_slurp_bsd_armap (abfd=0x81aea08) at archive.c:878"->"251#1088	    return do_slurp_bsd_armap (abfd);"[label="abfd,0",style="dashed", color="forestgreen"];
"485#bfd_getl32 (p=0x81cf000) at libbfd.c:619"->"484#927	      set->file_offset = H_GET_32 (abfd, rbase + BSD_SYMDEF_OFFSET_SIZE);"[label="rbase + 4,0",style="dashed", color="forestgreen"];
"190#bfd_slurp_armap (abfd=0x81aea08) at archive.c:1074"->"189#809	  if (!BFD_SEND (abfd, _bfd_slurp_armap, (abfd))"[label="abfd,0",style="dashed", color="forestgreen"];
}