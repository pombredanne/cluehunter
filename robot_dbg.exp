#!/usr/bin/expect -f


set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

set timeout -1
spawn gdb -q --args ./mcrypt -f key -d mcrypt_in_26.nc
match_max 100000
expect "Reading symbols from *done.\r
(gdb) "
send -- "set logging file ./gdb.txt\r"
send -- "set logging on\r"
send -- "start\r"
expect -re "start\r\n\(.*\r\n)*\\(gdb\\) "
send -- "n\r"
set jump 0
set memop "memcpy|memset|memchr|memmove|memcmp|malloc|calloc|alloca|realloc|free"
set fileop "fopen|fclose|fwprintf|fprintf|vfprintf|fscanf|fread|fwrite|fgetc|fgets|fstat|fnmatch|real_fseek|fseeko64|isatty|fileno|umask"
set stdop "open|close|read|write|scanf|printf|stat|lstat|getc|gets"
set strop "atoi|strlen|strcat|strncat|strtol|strtok|strdup|strcmp|strncmp|strcpy|strncpy|strstr|strrchr|strchr|sprintf|snprintf|vsprintf|vsnprintf|sscanf"
set sig "signal|sigaction|sigprocmask|sigpending|sigsuspend|sigemptyset"
set syscall "srand|gettimeofday|fork|syscall|textdomain|setlocale|getopt_long|ENOENT|bindtextdomain|non_fatal|nonfatal|exit_status|sbrk|CONST_STRNEQ"
set warnings "Cannot find"
set loglike ".*\(log|error|buildin).*\r\n"
set esc ".*\[^A-Za-z0-9_]\($memop|$fileop|$stdop|$strop|$syscall|$sig)\s*\\(.*\r\n"
set error_info1 "\(.*\r\n)*\[0-9]+	.*: No such file or directory.\r\n"
set error_info2 "\[0-9]+	in .*\r\n"
#puts $esc
set former "\(n|s\)\r\n"
set latter "\\(gdb\\) "
#set suffix ".*\r\n"
expect {
	-re ".*Program received signal.*$latter" { send -- "set logging off\r";}
	-re ".*The program no longer exists.*$latter" { send -- "set logging off\r";}
	-re ".*\r\n.*The program is not being run.*$latter" { exit }
	-re "$former$error_info1$latter" {send -- "finish\rn\r";exp_continue -continue_timer}
	-re "$former$error_info2$latter" {send -- "finish\rn\r";exp_continue -continue_timer}
	-re "$former$loglike$latter" {send -- "n\r";exp_continue -continue_timer}
	-re "$former$esc$latter" {send -- "n\r";exp_continue -continue_timer}
	-re "$former.*\(?!The program|$esc\).*\r\n$latter" {send -- "s\r";exp_continue -continue_timer}
}
send -- "q\r"
expect -exact "q\r
A debugging session is active.\r
\r
	Inferior 1 \[process 32213\] will be killed.\r
\r
Quit anyway? (y or n) "
send -- "y\r"
expect eof
